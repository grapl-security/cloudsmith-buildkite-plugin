---
env:
  PANTS_CONFIG_FILES: "['pants.toml', 'pants.ci.toml']"
  BUILDKITE_PLUGIN_VAULT_ENV_SECRET_PREFIX: "secret/data/buildkite/env"

steps:
  - label: ":jeans: All files are covered by Pants"
    command:
      - ./pants tailor --check

  - group: ":lint-roller: Lints"
    key: lints
    steps:
      - label: ":bash: Lint Shell"
        command:
          - make lint-shell
        plugins:
          - grapl-security/vault-login#v0.1.3
          - grapl-security/vault-env#v0.2.0:
              secrets:
                - cloudsmith-buildkite-plugin/TOOLCHAIN_AUTH_TOKEN

      - label: ":docker: Lint Dockerfiles"
        command:
          - make lint-docker
        plugins:
          - grapl-security/vault-login#v0.1.3
          - grapl-security/vault-env#v0.2.0:
              secrets:
                - cloudsmith-buildkite-plugin/TOOLCHAIN_AUTH_TOKEN

      - label: "Lint HCL"
        command:
          - make lint-hcl

      - label: ":buildkite: Lint Plugin"
        command:
          - make lint-plugin

  - group: "Unit Tests"
    key: unit-tests
    steps:
      - label: ":bash: Unit Test Shell"
        command:
          - make test-shell
        plugins:
          - grapl-security/vault-login#v0.1.3
          - grapl-security/vault-env#v0.2.0:
              secrets:
                - cloudsmith-buildkite-plugin/TOOLCHAIN_AUTH_TOKEN

      - label: ":buildkite: Test Plugin"
        command:
          - make test-plugin

  - label: ":docker: Build Image"
    command:
      - make image

  ########################################################################

  - wait

  - group: ":hammer_and_wrench: Integration Tests"
    key: integration-tests
    steps:
      - label: ":pipeline: Testing the 'move' promotion"
        command:
          - ".buildkite/pipeline.plugin-test.sh move | buildkite-agent pipeline upload"

      - label: ":pipeline: Testing the 'copy' promotion"
        command:
          - ".buildkite/pipeline.plugin-test.sh copy | buildkite-agent pipeline upload"
